// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes_main_HH_
#define _aes_main_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "AddRoundKey_InversMi.h"
#include "ByteSub_ShiftRow.h"
#include "InversShiftRow_ByteS.h"
#include "MixColumn_AddRoundKe.h"
#include "KeySchedule.h"
#include "AddRoundKey.h"
#include "aes_main_word.h"
#include "aes_main_key.h"
#include "aes_main_statemt.h"
#include "aes_main_out_enc_g8j.h"
#include "aes_main_out_dec_hbi.h"

namespace ap_rtl {

struct aes_main : public sc_module {
    // Port declarations 7
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    aes_main(sc_module_name name);
    SC_HAS_PROCESS(aes_main);

    ~aes_main();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    aes_main_word* word_U;
    aes_main_key* key_U;
    aes_main_statemt* statemt_U;
    aes_main_out_enc_g8j* out_enc_statemt_U;
    aes_main_out_dec_hbi* out_dec_statemt_U;
    AddRoundKey_InversMi* grp_AddRoundKey_InversMi_fu_356;
    ByteSub_ShiftRow* grp_ByteSub_ShiftRow_fu_366;
    InversShiftRow_ByteS* grp_InversShiftRow_ByteS_fu_375;
    MixColumn_AddRoundKe* grp_MixColumn_AddRoundKe_fu_384;
    KeySchedule* grp_KeySchedule_fu_395;
    AddRoundKey* grp_AddRoundKey_fu_407;
    sc_signal< sc_lv<36> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > word_address0;
    sc_signal< sc_logic > word_ce0;
    sc_signal< sc_logic > word_we0;
    sc_signal< sc_lv<32> > word_q0;
    sc_signal< sc_lv<9> > word_address1;
    sc_signal< sc_logic > word_ce1;
    sc_signal< sc_lv<32> > word_q1;
    sc_signal< sc_lv<5> > key_address0;
    sc_signal< sc_logic > key_ce0;
    sc_signal< sc_logic > key_we0;
    sc_signal< sc_lv<32> > key_d0;
    sc_signal< sc_lv<32> > key_q0;
    sc_signal< sc_lv<5> > key_address1;
    sc_signal< sc_logic > key_ce1;
    sc_signal< sc_logic > key_we1;
    sc_signal< sc_lv<32> > key_d1;
    sc_signal< sc_lv<6> > round_val;
    sc_signal< sc_lv<32> > nb;
    sc_signal< sc_lv<5> > statemt_address0;
    sc_signal< sc_logic > statemt_ce0;
    sc_signal< sc_logic > statemt_we0;
    sc_signal< sc_lv<32> > statemt_d0;
    sc_signal< sc_lv<32> > statemt_q0;
    sc_signal< sc_lv<5> > statemt_address1;
    sc_signal< sc_logic > statemt_ce1;
    sc_signal< sc_logic > statemt_we1;
    sc_signal< sc_lv<32> > statemt_d1;
    sc_signal< sc_lv<32> > statemt_q1;
    sc_signal< sc_lv<4> > out_enc_statemt_address0;
    sc_signal< sc_logic > out_enc_statemt_ce0;
    sc_signal< sc_lv<8> > out_enc_statemt_q0;
    sc_signal< sc_lv<32> > main_result;
    sc_signal< sc_lv<4> > out_dec_statemt_address0;
    sc_signal< sc_logic > out_dec_statemt_ce0;
    sc_signal< sc_lv<8> > out_dec_statemt_q0;
    sc_signal< sc_lv<32> > reg_441;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<1> > icmp_ln107_fu_469_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_lv<32> > i_fu_475_p2;
    sc_signal< sc_lv<32> > i_reg_592;
    sc_signal< sc_lv<5> > i_1_fu_487_p2;
    sc_signal< sc_lv<5> > i_1_reg_600;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<1> > icmp_ln123_fu_481_p2;
    sc_signal< sc_lv<1> > icmp_ln124_fu_509_p2;
    sc_signal< sc_lv<1> > icmp_ln124_reg_615;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<32> > zext_ln113_fu_530_p1;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > grp_InversShiftRow_ByteS_fu_375_ap_ready;
    sc_signal< sc_logic > grp_InversShiftRow_ByteS_fu_375_ap_done;
    sc_signal< sc_lv<32> > i_2_fu_534_p2;
    sc_signal< sc_lv<32> > i_2_reg_625;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_lv<5> > i_3_fu_552_p2;
    sc_signal< sc_lv<5> > i_3_reg_637;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<1> > icmp_ln129_fu_546_p2;
    sc_signal< sc_lv<1> > icmp_ln130_fu_568_p2;
    sc_signal< sc_lv<1> > icmp_ln130_reg_652;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > grp_AddRoundKey_InversMi_fu_356_ap_start;
    sc_signal< sc_logic > grp_AddRoundKey_InversMi_fu_356_ap_done;
    sc_signal< sc_logic > grp_AddRoundKey_InversMi_fu_356_ap_idle;
    sc_signal< sc_logic > grp_AddRoundKey_InversMi_fu_356_ap_ready;
    sc_signal< sc_lv<5> > grp_AddRoundKey_InversMi_fu_356_statemt_address0;
    sc_signal< sc_logic > grp_AddRoundKey_InversMi_fu_356_statemt_ce0;
    sc_signal< sc_logic > grp_AddRoundKey_InversMi_fu_356_statemt_we0;
    sc_signal< sc_lv<32> > grp_AddRoundKey_InversMi_fu_356_statemt_d0;
    sc_signal< sc_lv<5> > grp_AddRoundKey_InversMi_fu_356_statemt_address1;
    sc_signal< sc_logic > grp_AddRoundKey_InversMi_fu_356_statemt_ce1;
    sc_signal< sc_logic > grp_AddRoundKey_InversMi_fu_356_statemt_we1;
    sc_signal< sc_lv<32> > grp_AddRoundKey_InversMi_fu_356_statemt_d1;
    sc_signal< sc_lv<9> > grp_AddRoundKey_InversMi_fu_356_word_address0;
    sc_signal< sc_logic > grp_AddRoundKey_InversMi_fu_356_word_ce0;
    sc_signal< sc_lv<9> > grp_AddRoundKey_InversMi_fu_356_word_address1;
    sc_signal< sc_logic > grp_AddRoundKey_InversMi_fu_356_word_ce1;
    sc_signal< sc_logic > grp_ByteSub_ShiftRow_fu_366_ap_start;
    sc_signal< sc_logic > grp_ByteSub_ShiftRow_fu_366_ap_done;
    sc_signal< sc_logic > grp_ByteSub_ShiftRow_fu_366_ap_idle;
    sc_signal< sc_logic > grp_ByteSub_ShiftRow_fu_366_ap_ready;
    sc_signal< sc_lv<5> > grp_ByteSub_ShiftRow_fu_366_statemt_address0;
    sc_signal< sc_logic > grp_ByteSub_ShiftRow_fu_366_statemt_ce0;
    sc_signal< sc_logic > grp_ByteSub_ShiftRow_fu_366_statemt_we0;
    sc_signal< sc_lv<32> > grp_ByteSub_ShiftRow_fu_366_statemt_d0;
    sc_signal< sc_lv<5> > grp_ByteSub_ShiftRow_fu_366_statemt_address1;
    sc_signal< sc_logic > grp_ByteSub_ShiftRow_fu_366_statemt_ce1;
    sc_signal< sc_logic > grp_ByteSub_ShiftRow_fu_366_statemt_we1;
    sc_signal< sc_lv<32> > grp_ByteSub_ShiftRow_fu_366_statemt_d1;
    sc_signal< sc_logic > grp_InversShiftRow_ByteS_fu_375_ap_start;
    sc_signal< sc_logic > grp_InversShiftRow_ByteS_fu_375_ap_idle;
    sc_signal< sc_lv<5> > grp_InversShiftRow_ByteS_fu_375_statemt_address0;
    sc_signal< sc_logic > grp_InversShiftRow_ByteS_fu_375_statemt_ce0;
    sc_signal< sc_logic > grp_InversShiftRow_ByteS_fu_375_statemt_we0;
    sc_signal< sc_lv<32> > grp_InversShiftRow_ByteS_fu_375_statemt_d0;
    sc_signal< sc_lv<5> > grp_InversShiftRow_ByteS_fu_375_statemt_address1;
    sc_signal< sc_logic > grp_InversShiftRow_ByteS_fu_375_statemt_ce1;
    sc_signal< sc_logic > grp_InversShiftRow_ByteS_fu_375_statemt_we1;
    sc_signal< sc_lv<32> > grp_InversShiftRow_ByteS_fu_375_statemt_d1;
    sc_signal< sc_logic > grp_MixColumn_AddRoundKe_fu_384_ap_start;
    sc_signal< sc_logic > grp_MixColumn_AddRoundKe_fu_384_ap_done;
    sc_signal< sc_logic > grp_MixColumn_AddRoundKe_fu_384_ap_idle;
    sc_signal< sc_logic > grp_MixColumn_AddRoundKe_fu_384_ap_ready;
    sc_signal< sc_lv<5> > grp_MixColumn_AddRoundKe_fu_384_statemt_address0;
    sc_signal< sc_logic > grp_MixColumn_AddRoundKe_fu_384_statemt_ce0;
    sc_signal< sc_logic > grp_MixColumn_AddRoundKe_fu_384_statemt_we0;
    sc_signal< sc_lv<32> > grp_MixColumn_AddRoundKe_fu_384_statemt_d0;
    sc_signal< sc_lv<5> > grp_MixColumn_AddRoundKe_fu_384_statemt_address1;
    sc_signal< sc_logic > grp_MixColumn_AddRoundKe_fu_384_statemt_ce1;
    sc_signal< sc_logic > grp_MixColumn_AddRoundKe_fu_384_statemt_we1;
    sc_signal< sc_lv<32> > grp_MixColumn_AddRoundKe_fu_384_statemt_d1;
    sc_signal< sc_lv<9> > grp_MixColumn_AddRoundKe_fu_384_word_address0;
    sc_signal< sc_logic > grp_MixColumn_AddRoundKe_fu_384_word_ce0;
    sc_signal< sc_lv<9> > grp_MixColumn_AddRoundKe_fu_384_word_address1;
    sc_signal< sc_logic > grp_MixColumn_AddRoundKe_fu_384_word_ce1;
    sc_signal< sc_logic > grp_KeySchedule_fu_395_ap_start;
    sc_signal< sc_logic > grp_KeySchedule_fu_395_ap_done;
    sc_signal< sc_logic > grp_KeySchedule_fu_395_ap_idle;
    sc_signal< sc_logic > grp_KeySchedule_fu_395_ap_ready;
    sc_signal< sc_lv<5> > grp_KeySchedule_fu_395_key_address0;
    sc_signal< sc_logic > grp_KeySchedule_fu_395_key_ce0;
    sc_signal< sc_lv<9> > grp_KeySchedule_fu_395_word_address0;
    sc_signal< sc_logic > grp_KeySchedule_fu_395_word_ce0;
    sc_signal< sc_logic > grp_KeySchedule_fu_395_word_we0;
    sc_signal< sc_lv<32> > grp_KeySchedule_fu_395_word_d0;
    sc_signal< sc_lv<9> > grp_KeySchedule_fu_395_word_address1;
    sc_signal< sc_logic > grp_KeySchedule_fu_395_word_ce1;
    sc_signal< sc_logic > grp_AddRoundKey_fu_407_ap_start;
    sc_signal< sc_logic > grp_AddRoundKey_fu_407_ap_done;
    sc_signal< sc_logic > grp_AddRoundKey_fu_407_ap_idle;
    sc_signal< sc_logic > grp_AddRoundKey_fu_407_ap_ready;
    sc_signal< sc_lv<5> > grp_AddRoundKey_fu_407_statemt_address0;
    sc_signal< sc_logic > grp_AddRoundKey_fu_407_statemt_ce0;
    sc_signal< sc_logic > grp_AddRoundKey_fu_407_statemt_we0;
    sc_signal< sc_lv<32> > grp_AddRoundKey_fu_407_statemt_d0;
    sc_signal< sc_lv<5> > grp_AddRoundKey_fu_407_statemt_address1;
    sc_signal< sc_logic > grp_AddRoundKey_fu_407_statemt_ce1;
    sc_signal< sc_logic > grp_AddRoundKey_fu_407_statemt_we1;
    sc_signal< sc_lv<32> > grp_AddRoundKey_fu_407_statemt_d1;
    sc_signal< sc_lv<32> > grp_AddRoundKey_fu_407_n;
    sc_signal< sc_lv<9> > grp_AddRoundKey_fu_407_word_address0;
    sc_signal< sc_logic > grp_AddRoundKey_fu_407_word_ce0;
    sc_signal< sc_lv<9> > grp_AddRoundKey_fu_407_word_address1;
    sc_signal< sc_logic > grp_AddRoundKey_fu_407_word_ce1;
    sc_signal< sc_lv<32> > i_0_i_reg_313;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<5> > i_2_i_reg_325;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<32> > i_0_in_i_reg_336;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_lv<5> > i_2_i5_reg_345;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_logic > grp_AddRoundKey_InversMi_fu_356_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > grp_ByteSub_ShiftRow_fu_366_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > grp_InversShiftRow_ByteS_fu_375_ap_start_reg;
    sc_signal< sc_logic > grp_MixColumn_AddRoundKe_fu_384_ap_start_reg;
    sc_signal< sc_logic > grp_KeySchedule_fu_395_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_logic > grp_AddRoundKey_fu_407_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<1> > icmp_ln113_fu_540_p2;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<64> > zext_ln124_fu_493_p1;
    sc_signal< sc_lv<64> > zext_ln130_fu_558_p1;
    sc_signal< sc_lv<32> > add_ln124_fu_518_p2;
    sc_signal< sc_lv<32> > add_ln130_fu_577_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<5> > trunc_ln107_fu_455_p1;
    sc_signal< sc_lv<5> > add_ln107_fu_459_p2;
    sc_signal< sc_lv<32> > zext_ln107_fu_465_p1;
    sc_signal< sc_lv<32> > zext_ln124_1_fu_505_p1;
    sc_signal< sc_lv<32> > zext_ln124_2_fu_515_p1;
    sc_signal< sc_lv<32> > zext_ln130_1_fu_564_p1;
    sc_signal< sc_lv<32> > zext_ln130_2_fu_574_p1;
    sc_signal< sc_lv<36> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<36> ap_ST_fsm_state1;
    static const sc_lv<36> ap_ST_fsm_state2;
    static const sc_lv<36> ap_ST_fsm_state3;
    static const sc_lv<36> ap_ST_fsm_state4;
    static const sc_lv<36> ap_ST_fsm_state5;
    static const sc_lv<36> ap_ST_fsm_state6;
    static const sc_lv<36> ap_ST_fsm_state7;
    static const sc_lv<36> ap_ST_fsm_state8;
    static const sc_lv<36> ap_ST_fsm_state9;
    static const sc_lv<36> ap_ST_fsm_state10;
    static const sc_lv<36> ap_ST_fsm_state11;
    static const sc_lv<36> ap_ST_fsm_state12;
    static const sc_lv<36> ap_ST_fsm_state13;
    static const sc_lv<36> ap_ST_fsm_state14;
    static const sc_lv<36> ap_ST_fsm_state15;
    static const sc_lv<36> ap_ST_fsm_state16;
    static const sc_lv<36> ap_ST_fsm_state17;
    static const sc_lv<36> ap_ST_fsm_state18;
    static const sc_lv<36> ap_ST_fsm_state19;
    static const sc_lv<36> ap_ST_fsm_state20;
    static const sc_lv<36> ap_ST_fsm_state21;
    static const sc_lv<36> ap_ST_fsm_state22;
    static const sc_lv<36> ap_ST_fsm_state23;
    static const sc_lv<36> ap_ST_fsm_state24;
    static const sc_lv<36> ap_ST_fsm_state25;
    static const sc_lv<36> ap_ST_fsm_state26;
    static const sc_lv<36> ap_ST_fsm_state27;
    static const sc_lv<36> ap_ST_fsm_state28;
    static const sc_lv<36> ap_ST_fsm_state29;
    static const sc_lv<36> ap_ST_fsm_state30;
    static const sc_lv<36> ap_ST_fsm_state31;
    static const sc_lv<36> ap_ST_fsm_state32;
    static const sc_lv<36> ap_ST_fsm_state33;
    static const sc_lv<36> ap_ST_fsm_state34;
    static const sc_lv<36> ap_ST_fsm_state35;
    static const sc_lv<36> ap_ST_fsm_state36;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<6> ap_const_lv6_A;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_7E;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<32> ap_const_lv32_AE;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_D2;
    static const sc_lv<5> ap_const_lv5_6;
    static const sc_lv<32> ap_const_lv32_A6;
    static const sc_lv<5> ap_const_lv5_7;
    static const sc_lv<32> ap_const_lv32_AB;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<32> ap_const_lv32_F7;
    static const sc_lv<5> ap_const_lv5_9;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<32> ap_const_lv32_88;
    static const sc_lv<5> ap_const_lv5_B;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<32> ap_const_lv32_CF;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_4F;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<32> ap_const_lv32_43;
    static const sc_lv<32> ap_const_lv32_F6;
    static const sc_lv<32> ap_const_lv32_A8;
    static const sc_lv<32> ap_const_lv32_5A;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_8D;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_98;
    static const sc_lv<32> ap_const_lv32_A2;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln107_fu_459_p2();
    void thread_add_ln124_fu_518_p2();
    void thread_add_ln130_fu_577_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_AddRoundKey_InversMi_fu_356_ap_start();
    void thread_grp_AddRoundKey_fu_407_ap_start();
    void thread_grp_AddRoundKey_fu_407_n();
    void thread_grp_ByteSub_ShiftRow_fu_366_ap_start();
    void thread_grp_InversShiftRow_ByteS_fu_375_ap_start();
    void thread_grp_KeySchedule_fu_395_ap_start();
    void thread_grp_MixColumn_AddRoundKe_fu_384_ap_start();
    void thread_i_1_fu_487_p2();
    void thread_i_2_fu_534_p2();
    void thread_i_3_fu_552_p2();
    void thread_i_fu_475_p2();
    void thread_icmp_ln107_fu_469_p2();
    void thread_icmp_ln113_fu_540_p2();
    void thread_icmp_ln123_fu_481_p2();
    void thread_icmp_ln124_fu_509_p2();
    void thread_icmp_ln129_fu_546_p2();
    void thread_icmp_ln130_fu_568_p2();
    void thread_key_address0();
    void thread_key_address1();
    void thread_key_ce0();
    void thread_key_ce1();
    void thread_key_d0();
    void thread_key_d1();
    void thread_key_we0();
    void thread_key_we1();
    void thread_out_dec_statemt_address0();
    void thread_out_dec_statemt_ce0();
    void thread_out_enc_statemt_address0();
    void thread_out_enc_statemt_ce0();
    void thread_statemt_address0();
    void thread_statemt_address1();
    void thread_statemt_ce0();
    void thread_statemt_ce1();
    void thread_statemt_d0();
    void thread_statemt_d1();
    void thread_statemt_we0();
    void thread_statemt_we1();
    void thread_trunc_ln107_fu_455_p1();
    void thread_word_address0();
    void thread_word_address1();
    void thread_word_ce0();
    void thread_word_ce1();
    void thread_word_we0();
    void thread_zext_ln107_fu_465_p1();
    void thread_zext_ln113_fu_530_p1();
    void thread_zext_ln124_1_fu_505_p1();
    void thread_zext_ln124_2_fu_515_p1();
    void thread_zext_ln124_fu_493_p1();
    void thread_zext_ln130_1_fu_564_p1();
    void thread_zext_ln130_2_fu_574_p1();
    void thread_zext_ln130_fu_558_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
